<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.demo.ApiFarquardApplicationTests" tests="1" skipped="0" failures="0" errors="0" timestamp="2023-10-25T02:56:11" hostname="DESKTOP-33RN017" time="7.459">
  <properties/>
  <testcase name="contextLoads()" classname="com.example.demo.ApiFarquardApplicationTests" time="7.459"/>
  <system-out><![CDATA[23:55:00.264 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.example.demo.ApiFarquardApplicationTests]: ApiFarquardApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
23:55:01.603 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.example.demo.ApiFarquardApplication for test class com.example.demo.ApiFarquardApplicationTests

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.4)

2023-10-24T23:55:06.332-03:00  INFO 7420 --- [    Test worker] c.e.demo.ApiFarquardApplicationTests     : Starting ApiFarquardApplicationTests using Java 17.0.8 with PID 7420 (started by Usuario in C:\Users\Usuario\Documents\GitHub\El-buen-sabor-BackEnd\ApiBack\demo)
2023-10-24T23:55:06.345-03:00  INFO 7420 --- [    Test worker] c.e.demo.ApiFarquardApplicationTests     : No active profile set, falling back to 1 default profile: "default"
2023-10-24T23:55:16.895-03:00  INFO 7420 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-24T23:55:18.300-03:00  INFO 7420 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 1335 ms. Found 19 JPA repository interfaces.
2023-10-24T23:55:24.383-03:00  INFO 7420 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-24T23:55:25.330-03:00  INFO 7420 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.2.9.Final
2023-10-24T23:55:25.350-03:00  INFO 7420 --- [    Test worker] org.hibernate.cfg.Environment            : HHH000406: Using bytecode reflection optimizer
2023-10-24T23:55:26.866-03:00  INFO 7420 --- [    Test worker] o.h.e.boot.internal.EnversServiceImpl    : Envers integration enabled? : true
2023-10-24T23:55:27.143-03:00  INFO 7420 --- [    Test worker] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-10-24T23:55:29.183-03:00  INFO 7420 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-24T23:55:29.379-03:00  INFO 7420 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-10-24T23:55:31.192-03:00  INFO 7420 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:./betodb user=SA
2023-10-24T23:55:31.203-03:00  INFO 7420 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-10-24T23:55:35.441-03:00  INFO 7420 --- [    Test worker] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-10-24T23:55:44.742-03:00  INFO 7420 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: create table categoria (id bigint generated by default as identity, fecha_alta timestamp(6), fecha_baja timestamp(6), fecha_modificacion timestamp(6), descripcion_categoria varchar(255), fecha_hora_baja timestamp(6), nombre_categoria varchar(255), primary key (id))
Hibernate: create table cliente (id bigint generated by default as identity, fecha_alta timestamp(6), fecha_baja timestamp(6), fecha_modificacion timestamp(6), apellido varchar(255), email varchar(255), nombre varchar(255), telefono varchar(255), id_usuario bigint, primary key (id))
Hibernate: create table comprobante (id bigint generated by default as identity, fecha_alta timestamp(6), fecha_baja timestamp(6), fecha_modificacion timestamp(6), numero varchar(255), total numeric(10,2), primary key (id))
Hibernate: create table detalle_factura (id bigint generated by default as identity, fecha_alta timestamp(6), fecha_baja timestamp(6), fecha_modificacion timestamp(6), cantidad integer, subtotal numeric(10,2), id_comprobante bigint, "id-detalle_factura" bigint, id_detalle_factura bigint, primary key (id))
Hibernate: create table detalle_pedido (id bigint generated by default as identity, fecha_alta timestamp(6), fecha_baja timestamp(6), fecha_modificacion timestamp(6), cantidad integer, subtotal numeric(10,2), subtotal_costo numeric(10,2), id_producto bigint, id_detalle_dedido bigint, primary key (id))
Hibernate: create table detalle_orden_compra (id bigint generated by default as identity, fecha_alta timestamp(6), fecha_baja timestamp(6), fecha_modificacion timestamp(6), cantidad_detalle_compra integer, precio_unitario_detalle_compra float(53), id_ingrediente bigint not null, detalle_orden_compra bigint, primary key (id))
Hibernate: create table domicilio (id bigint generated by default as identity, fecha_alta timestamp(6), fecha_baja timestamp(6), fecha_modificacion timestamp(6), calle varchar(500), numero integer, numero_vivienda integer, piso_vivienda integer, id_domicilio bigint, primary key (id))
Hibernate: create table factura (fecha_facturacion timestamp(6), forma_pago tinyint check (forma_pago between 0 and 1), mp_merchant_order_id bigint, mp_payment_id bigint, mp_payment_type varchar(255), mp_preference_id varchar(255), total_venta numeric(10,2), id bigint not null, primary key (id))
Hibernate: create table ingrediente (id bigint generated by default as identity, fecha_alta timestamp(6), fecha_baja timestamp(6), fecha_modificacion timestamp(6), denominacion varchar(255), precio_compra numeric(10,2), stock_actual numeric(10,2), stock_minimo numeric(10,2), url_imagen varchar(255), id_rubro_articulo bigint not null, id_unidad_medida bigint not null, primary key (id))
Hibernate: create table ingrediente_receta (id bigint generated by default as identity, fecha_alta timestamp(6), fecha_baja timestamp(6), fecha_modificacion timestamp(6), cantidadir integer, id_ingrediente bigint, primary key (id))
Hibernate: create table localidad (id bigint generated by default as identity, fecha_alta timestamp(6), fecha_baja timestamp(6), fecha_modificacion timestamp(6), codigo_postal integer, descripcion_localidad varchar(255), id_localidad integer not null, nombre_localidad varchar(255), primary key (id))
Hibernate: create table nota_de_credito (descripciÃ³n varchar(255), fecha_nota_credito timestamp(6), importe float(53), id bigint not null, primary key (id))
Hibernate: create table orden_compra (fecha_hora_orden_compra timestamp(6), monto_total_orden_compra float(53) not null, num_orden_compra integer not null, id bigint not null, primary key (id))
Hibernate: create table pedido (id bigint generated by default as identity, fecha_alta timestamp(6), fecha_baja timestamp(6), fecha_modificacion timestamp(6), estado varchar(255) check (estado in ('PENDIENTE_PAGO','PAGADO','PREPARACION','PENDIENTE_ENTREGA','EN_CAMINO','CANCELADO','NOTA_CREDITO','COMPLETADO')), fecha_pedido timestamp(6), forma_pago varchar(255) check (forma_pago in ('EFECTIVO','MERCADO_PAGO')), hora_estimada_finalizacion timestamp(6), tipo_envio varchar(255) check (tipo_envio in ('DELIVERY','TAKE_AWAY')), total numeric(10,2), total_costo numeric(10,2), id_comprobante bigint, id_domicilio bigint, "id-pedido" bigint, primary key (id))
Hibernate: create table producto (id bigint generated by default as identity, fecha_alta timestamp(6), fecha_baja timestamp(6), fecha_modificacion timestamp(6), costo numeric(10,2), denominacion varchar(255), descripcion varchar(1000), precio_venta numeric(10,2), tiempo_estimado_cocina integer, url_imagen varchar(500), id_receta bigint, id_categoria bigint not null, primary key (id))
Hibernate: create table receta (id bigint generated by default as identity, fecha_alta timestamp(6), fecha_baja timestamp(6), fecha_modificacion timestamp(6), descripcion varchar(255), duracion float(53), instruccion varchar(255), nombre varchar(255), numero integer, id_ingrediente_receta bigint not null, primary key (id))
Hibernate: create table rubro_articulo (id bigint generated by default as identity, fecha_alta timestamp(6), fecha_baja timestamp(6), fecha_modificacion timestamp(6), denominacion varchar(255), id_rubro_padre bigint, primary key (id))
Hibernate: create table unidad_medida (id bigint generated by default as identity, fecha_alta timestamp(6), fecha_baja timestamp(6), fecha_modificacion timestamp(6), abreviatura varchar(25), denominacion varchar(255), primary key (id))
Hibernate: create table usuario (id bigint generated by default as identity, fecha_alta timestamp(6), fecha_baja timestamp(6), fecha_modificacion timestamp(6), auth0_id varchar(255) not null, username varchar(255) not null, primary key (id))
Hibernate: alter table if exists cliente drop constraint if exists UK_m1e6bw9cg5aydhk0rlylo5oom
Hibernate: alter table if exists cliente add constraint UK_m1e6bw9cg5aydhk0rlylo5oom unique (id_usuario)
Hibernate: alter table if exists producto drop constraint if exists UK_s42wuhc4ay3c61lkoidxuy0jm
Hibernate: alter table if exists producto add constraint UK_s42wuhc4ay3c61lkoidxuy0jm unique (id_receta)
Hibernate: alter table if exists usuario drop constraint if exists UK_tqkjm4qc8im3647npshypxkmr
Hibernate: alter table if exists usuario add constraint UK_tqkjm4qc8im3647npshypxkmr unique (auth0_id)
Hibernate: alter table if exists cliente add constraint FKetx0tojxf5yevxcyt6qb526x5 foreign key (id_usuario) references usuario
Hibernate: alter table if exists detalle_factura add constraint FKobuwqi7joesst6g0rsu2xqx0v foreign key (id_comprobante) references comprobante
Hibernate: alter table if exists detalle_factura add constraint FKjd2ayyv1hfbksfm0derqq3nn9 foreign key ("id-detalle_factura") references producto
Hibernate: alter table if exists detalle_factura add constraint FKo2cq1rgoi9vyce8mhs9y86v1n foreign key (id_detalle_factura) references factura
Hibernate: alter table if exists detalle_pedido add constraint FKjfm9pk0w2eag8tx8lu6pbego6 foreign key (id_producto) references producto
Hibernate: alter table if exists detalle_pedido add constraint FKt7url15nah1j4xbnbmlyb0sy0 foreign key (id_detalle_dedido) references pedido
Hibernate: alter table if exists detalle_orden_compra add constraint FKe1kkb50xg7qfp2p373x3e3t6d foreign key (id_ingrediente) references ingrediente
Hibernate: alter table if exists detalle_orden_compra add constraint FK3pmml8j1r7guorrext3a7q2el foreign key (detalle_orden_compra) references orden_compra
Hibernate: alter table if exists domicilio add constraint FKkmo4iqvrdkmwj9evj1cx3xw6 foreign key (id_domicilio) references cliente
Hibernate: alter table if exists factura add constraint FK56fjq98c02mvi55pvd0reu5hp foreign key (id) references comprobante
Hibernate: alter table if exists ingrediente add constraint FK7xl1ywsa54bybb00xko0y056b foreign key (id_rubro_articulo) references rubro_articulo
Hibernate: alter table if exists ingrediente add constraint FKnshjum3q6i03umtxaa27altk7 foreign key (id_unidad_medida) references unidad_medida
Hibernate: alter table if exists ingrediente_receta add constraint FKco973heyh5rnrdg5vws4rhbtw foreign key (id_ingrediente) references ingrediente
Hibernate: alter table if exists localidad add constraint FKlrfyf4x3638g8xhok8kp2pkmn foreign key (id_localidad) references domicilio
Hibernate: alter table if exists nota_de_credito add constraint FK7lf9t76d308f3os6r56l0r7ae foreign key (id) references comprobante
Hibernate: alter table if exists orden_compra add constraint FKb1afk48xrbxvbxltuegoct8up foreign key (id) references comprobante
Hibernate: alter table if exists pedido add constraint FKbvffbd8dwmo4f6vvn2rgaj2v4 foreign key (id_comprobante) references comprobante
Hibernate: alter table if exists pedido add constraint FKk0m2es33bxv4u0w12va7rl16a foreign key (id_domicilio) references domicilio
Hibernate: alter table if exists pedido add constraint FK4dexkb1l848bu8pqv0xoxalhx foreign key ("id-pedido") references cliente
Hibernate: alter table if exists producto add constraint FK3jg9pv0i3w927ixfwgwsh1jeb foreign key (id_receta) references receta
Hibernate: alter table if exists producto add constraint FK9nyueixdsgbycfhf7allg8su foreign key (id_categoria) references categoria
Hibernate: alter table if exists receta add constraint FKt1cbxy3y05grup6m4jcywx53p foreign key (id_ingrediente_receta) references ingrediente_receta
Hibernate: alter table if exists rubro_articulo add constraint FKib3v7aol7nr8q3ddv07qlxcpe foreign key (id_rubro_padre) references rubro_articulo
2023-10-24T23:55:45.712-03:00  INFO 7420 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-24T23:55:51.828-03:00  INFO 7420 --- [    Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2023-10-24T23:56:02.374-03:00  WARN 7420 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-24T23:56:10.169-03:00  INFO 7420 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:./betodb'
2023-10-24T23:56:10.902-03:00  INFO 7420 --- [    Test worker] c.e.demo.ApiFarquardApplicationTests     : Started ApiFarquardApplicationTests in 67.183 seconds (process running for 80.964)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
